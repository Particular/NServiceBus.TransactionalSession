name: CI
on:
  push:
    branches:
      - main
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: ${{ matrix.os-name }}-${{ matrix.engines }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-20.04 ]
        engines: [
          AzureStorage,
          MongoDB,
          SqlServer,
          CosmosDB,
          RavenDB,
        ]
        include:
          - engines: AzureStorage
            upload-packages: true
            requires-azure-login: true
          - engines: CosmosDB
            requires-azure-login: true
          - engines: RavenDB
            requires-azure-login: true
          # Add os-name alias for job name
          - os: windows-2019
            os-name: Windows
          - os: ubuntu-20.04
            os-name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: matrix.upload-packages && runner.os == 'Windows'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
      - name: Azure login
        if: matrix.requires-azure-login
        uses: azure/login@v1.4.5
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
      - name: Setup RavenDB
        if: contains(matrix.engines, 'RavenDB')
        uses: Particular/setup-ravendb-action@3f7caf796203bd4c5eb7bc479d371b02e2c9f0c6
        with:
          single-connection-string-name: RavenDBConnectionString
          ravendb-license: ${{ secrets.RAVENDB_LICENSE }}
      - name: Setup MongoDB Server
        if: contains(matrix.engines, 'MongoDB')
        uses: Particular/setup-mongodb-action@v1.1.0
        with:
          connection-string-name: MongoDBConnectionString
          mongodb-replica-set: tr0
      - name: Setup SQL Server
        if: contains(matrix.engines, 'SqlServer')
        uses: Particular/install-sql-server-action@v1.0.0
        with:
          connection-string-env-var: SQLServerConnectionString
          catalog: nservicebus
      - name: Setup Cosmos DB
        if: contains(matrix.engines, 'CosmosDB')
        uses: Particular/setup-cosmosdb-action@v1.0.0
        with:
          connection-string-name: CosmosDBPersistence_ConnectionString
          azure-credentials: ${{ secrets.AZURE_ACI_CREDENTIALS }}
          tag: TransactionalSession
      - name: Setup Azure Storage Cosmos API
        if: contains(matrix.engines, 'AzureStorage')
        uses: Particular/setup-cosmosdb-action@v1.0.0
        with:
          connection-string-name: AzureTableServerConnectionString
          azure-credentials: ${{ secrets.AZURE_ACI_CREDENTIALS }}
          tag: TransactionalSession
          api: Table
      - name: Run tests
        uses: Particular/run-tests-action@v1.3.0
